apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {

        multiDexEnabled true

        applicationId rootProject.ext.ApplicationId
        versionCode rootProject.ext.VersionCode
        versionName rootProject.ext.VersionName

        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion


        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }
    signingConfigs {
        keystore {
            storeFile file("../sign/j1j2_zxh.keystore")
            storePassword "zxh19910528"
            keyAlias "j1j2_zxh_keystore"
            keyPassword "zxh19910528"
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.keystore
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "String", "API_URL", "\"http://m.jpos.j1j2.cn/v6/\""
            buildConfigField "String", "IMAGE_URL", "\"http://m.jpos.j1j2.cn\""
        }

        release {
            signingConfig signingConfigs.keystore
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "String", "API_URL", "\"http://m.jpos.j1j2.cn/v6/\""
            buildConfigField "String", "IMAGE_URL", "\"http://m.jpos.j1j2.cn\""
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(output.outputFile.parent,
                    buildType.name == "debug" ?
                            rootProject.apkname
                                    + buildType.name + ".apk" :
                            rootProject.apkname
                                    + "V" + defaultConfig.versionCode
                                    + "T" + rootProject.buildTime()
                                    + buildType.name
                                    + ".apk");
        }
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
    }
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(":style")

    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-annotations:$rootProject.supportLibraryVersion"

    compile "io.reactivex.rxjava2:rxjava:$rootProject.rxjavaVersion"
    compile "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"
    compile "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"

//    compile "com.elvishew:xlog:$rootProject.xlogVersion"

    compile "com.google.dagger:dagger:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    compile "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    compile "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"


    compile "com.alibaba:arouter-api:$rootProject.arouterApiVersion"
    kapt "com.alibaba:arouter-compiler:$rootProject.arouterCompilerVersion"

    compile "cn.bingoogolapple:bga-qrcodecore:$rootProject.bgaqrcodecoreVersion"
    compile "cn.bingoogolapple:bga-zxing:$rootProject.bgaqrcodecoreVersion"

    compile "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    compile "jp.wasabeef:glide-transformations:$rootProject.glidetransformationsVersion"
    compile "com.github.bumptech.glide:okhttp3-integration:$rootProject.okhttp3integrationVersion"

    compile "com.blankj:utilcode:$rootProject.utilcodeVersion"

    //bugly
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.0.0
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0
    //debug
    compile "com.facebook.stetho:stetho:$rootProject.stethoVersion"
    compile "com.facebook.stetho:stetho-okhttp3:$rootProject.stethoVersion"
    compile "com.github.LuckSiege.PictureSelector:picture_library:$rootProject.pictureSelectorVersion"
    //debug
    debugCompile "com.squareup.leakcanary:leakcanary-android:$rootProject.leakCanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakCanaryVersion"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakCanaryVersion"
    //ui
    compile "com.shizhefei:CoolRefreshView:$rootProject.coolRefreshViewVersion"
    compile "com.github.d-max:spots-dialog:$rootProject.spotsDialogVersion"


    androidTestCompile("com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testCompile "junit:junit:$rootProject.junitVersion"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    compile 'com.google.zxing:core:3.2.1'
    compile 'com.tencent.bugly:crashreport_upgrade:latest.release'
    compile 'com.tencent.bugly:nativecrashreport:latest.release'
    compile 'com.android.support:support-v4:25.3.1'
}
repositories {
    mavenCentral()
}
